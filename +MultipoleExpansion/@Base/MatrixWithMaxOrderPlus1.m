function res = MatrixWithMaxOrderPlus1(obj, vecAB, maxOrderPlus1)
switch(maxOrderPlus1)
    case(1)
        res = obj.BlockWithMaxOrder0(vecAB);
    case(2)
        res = [ ...
            obj.BlockWithMaxOrder0(vecAB), ...
            obj.BlockWithMaxOrder1(vecAB)];
    case(3)
        res = [ ...
            obj.BlockWithMaxOrder0(vecAB), ...
            obj.BlockWithMaxOrder1(vecAB), ...
            obj.BlockWithMaxOrder2(vecAB)];
    case(4)
        res = [ ...
            obj.BlockWithMaxOrder0(vecAB), ...
            obj.BlockWithMaxOrder1(vecAB), ...
            obj.BlockWithMaxOrder2(vecAB), ...
            obj.BlockWithMaxOrder3(vecAB)];
    case(5)
        res = [ ...
            obj.BlockWithMaxOrder0(vecAB), ...
            obj.BlockWithMaxOrder1(vecAB), ...
            obj.BlockWithMaxOrder2(vecAB), ...
            obj.BlockWithMaxOrder3(vecAB), ...
            obj.BlockWithMaxOrder4(vecAB)];
    case(6)
        res = [ ...
            obj.BlockWithMaxOrder0(vecAB), ...
            obj.BlockWithMaxOrder1(vecAB), ...
            obj.BlockWithMaxOrder2(vecAB), ...
            obj.BlockWithMaxOrder3(vecAB), ...
            obj.BlockWithMaxOrder4(vecAB), ...
            obj.BlockWithMaxOrder5(vecAB)];
    otherwise
        throw(MException('Base:MatrixWithMaxOrderPlus1', 'Order not implemented yet.'));
end
end